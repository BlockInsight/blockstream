// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cached.proto

package cached

import (
	context "context"
	fmt "fmt"
	types "github.com/blockinsight/blockstream/types"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PutRequest struct {
	Blockchain           types.Blockchain `protobuf:"varint,1,opt,name=blockchain,proto3,enum=types.Blockchain" json:"blockchain,omitempty"`
	ChainId              string           `protobuf:"bytes,2,opt,name=chainId,proto3" json:"chainId,omitempty"`
	Offset               uint64           `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Block                []byte           `protobuf:"bytes,4,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PutRequest) Reset()         { *m = PutRequest{} }
func (m *PutRequest) String() string { return proto.CompactTextString(m) }
func (*PutRequest) ProtoMessage()    {}
func (*PutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bdccd6ae8e8af8f5, []int{0}
}

func (m *PutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutRequest.Unmarshal(m, b)
}
func (m *PutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutRequest.Marshal(b, m, deterministic)
}
func (m *PutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutRequest.Merge(m, src)
}
func (m *PutRequest) XXX_Size() int {
	return xxx_messageInfo_PutRequest.Size(m)
}
func (m *PutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutRequest proto.InternalMessageInfo

func (m *PutRequest) GetBlockchain() types.Blockchain {
	if m != nil {
		return m.Blockchain
	}
	return types.Blockchain_BTC
}

func (m *PutRequest) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

func (m *PutRequest) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *PutRequest) GetBlock() []byte {
	if m != nil {
		return m.Block
	}
	return nil
}

type PutResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutResponse) Reset()         { *m = PutResponse{} }
func (m *PutResponse) String() string { return proto.CompactTextString(m) }
func (*PutResponse) ProtoMessage()    {}
func (*PutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bdccd6ae8e8af8f5, []int{1}
}

func (m *PutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutResponse.Unmarshal(m, b)
}
func (m *PutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutResponse.Marshal(b, m, deterministic)
}
func (m *PutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutResponse.Merge(m, src)
}
func (m *PutResponse) XXX_Size() int {
	return xxx_messageInfo_PutResponse.Size(m)
}
func (m *PutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutResponse proto.InternalMessageInfo

type GetRequest struct {
	Blockchain           types.Blockchain `protobuf:"varint,1,opt,name=blockchain,proto3,enum=types.Blockchain" json:"blockchain,omitempty"`
	ChainId              string           `protobuf:"bytes,2,opt,name=chainId,proto3" json:"chainId,omitempty"`
	Offset               uint64           `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bdccd6ae8e8af8f5, []int{2}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetBlockchain() types.Blockchain {
	if m != nil {
		return m.Blockchain
	}
	return types.Blockchain_BTC
}

func (m *GetRequest) GetChainId() string {
	if m != nil {
		return m.ChainId
	}
	return ""
}

func (m *GetRequest) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type GetResponse struct {
	Block                []byte   `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bdccd6ae8e8af8f5, []int{3}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetBlock() []byte {
	if m != nil {
		return m.Block
	}
	return nil
}

func init() {
	proto.RegisterType((*PutRequest)(nil), "cached.PutRequest")
	proto.RegisterType((*PutResponse)(nil), "cached.PutResponse")
	proto.RegisterType((*GetRequest)(nil), "cached.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "cached.GetResponse")
}

func init() { proto.RegisterFile("cached.proto", fileDescriptor_bdccd6ae8e8af8f5) }

var fileDescriptor_bdccd6ae8e8af8f5 = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x91, 0xc1, 0x4e, 0x03, 0x21,
	0x10, 0x86, 0x83, 0x5b, 0x31, 0xce, 0x56, 0x13, 0x47, 0x63, 0x48, 0x4f, 0x04, 0x2f, 0x9c, 0x48,
	0xac, 0x6f, 0xa0, 0x87, 0xc6, 0x5b, 0xc3, 0x1b, 0xb4, 0x74, 0x9a, 0x35, 0x9a, 0x65, 0x57, 0xd8,
	0x83, 0x4f, 0xe0, 0x6b, 0x9b, 0xc0, 0x2a, 0xf8, 0x02, 0xbd, 0xf1, 0x0f, 0xff, 0x30, 0x1f, 0xff,
	0xc0, 0xd2, 0xed, 0x5c, 0x47, 0x07, 0x33, 0x7c, 0xfa, 0xe8, 0x91, 0x67, 0xb5, 0x6a, 0xe3, 0xd7,
	0x40, 0x21, 0x17, 0xd5, 0x37, 0x03, 0xd8, 0x4e, 0xd1, 0xd2, 0x38, 0x51, 0x88, 0xf8, 0x08, 0xb0,
	0xff, 0xf0, 0xee, 0xdd, 0x75, 0xbb, 0xb7, 0x5e, 0x30, 0xc9, 0xf4, 0xf5, 0xfa, 0xc6, 0xe4, 0x86,
	0xe7, 0xbf, 0x0b, 0x5b, 0x99, 0x50, 0xc0, 0x45, 0x3a, 0xbc, 0x1e, 0xc4, 0x99, 0x64, 0xfa, 0xd2,
	0xfe, 0x4a, 0xbc, 0x07, 0xee, 0x8f, 0xc7, 0x40, 0x51, 0x34, 0x92, 0xe9, 0x85, 0x9d, 0x15, 0xde,
	0xc1, 0x79, 0xea, 0x17, 0x0b, 0xc9, 0xf4, 0xd2, 0x66, 0xa1, 0xae, 0xa0, 0x4d, 0x20, 0x61, 0xf0,
	0x7d, 0x20, 0x35, 0x02, 0x6c, 0xe8, 0xa4, 0x5c, 0xea, 0x01, 0xda, 0x34, 0x32, 0x13, 0x14, 0x4c,
	0x56, 0x61, 0xae, 0x3b, 0xe0, 0x2f, 0x29, 0x47, 0x34, 0xd0, 0x6c, 0xa7, 0x88, 0x68, 0xe6, 0x94,
	0x4b, 0x8c, 0xab, 0xdb, 0x7f, 0xb5, 0xf9, 0x3d, 0x03, 0xcd, 0x86, 0x2a, 0x7f, 0xf9, 0x5e, 0xf1,
	0x57, 0xf3, 0xf7, 0x3c, 0x6d, 0xe8, 0xe9, 0x27, 0x00, 0x00, 0xff, 0xff, 0x61, 0xeb, 0xb4, 0x71,
	0xc6, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CachedClient is the client API for Cached service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CachedClient interface {
	Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
}

type cachedClient struct {
	cc *grpc.ClientConn
}

func NewCachedClient(cc *grpc.ClientConn) CachedClient {
	return &cachedClient{cc}
}

func (c *cachedClient) Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error) {
	out := new(PutResponse)
	err := c.cc.Invoke(ctx, "/cached.Cached/Put", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cachedClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/cached.Cached/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CachedServer is the server API for Cached service.
type CachedServer interface {
	Put(context.Context, *PutRequest) (*PutResponse, error)
	Get(context.Context, *GetRequest) (*GetResponse, error)
}

func RegisterCachedServer(s *grpc.Server, srv CachedServer) {
	s.RegisterService(&_Cached_serviceDesc, srv)
}

func _Cached_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CachedServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cached.Cached/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CachedServer).Put(ctx, req.(*PutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cached_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CachedServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cached.Cached/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CachedServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cached_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cached.Cached",
	HandlerType: (*CachedServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Put",
			Handler:    _Cached_Put_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Cached_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cached.proto",
}
